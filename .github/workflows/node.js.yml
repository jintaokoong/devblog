# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    env:
      # Setting an environment variable with the value of a configuration variable
      UMAMI_WEB_ID: ${{ vars.UMAMI_WEB_ID }}
      
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - name: Install pnpm
      uses: pnpm/action-setup@v2.4.0
      with:
        version: 8
        run_install: false
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    - name: Install dependencies
      run: pnpm install
    - name: Run build
      run: pnpm build
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.2.0
      with:
        # Artifact name
        name: artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: dist/
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error
        retention-days: 7
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.1
      with:
        # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
        name: artifact
    - name: Debug print directory
      run: |
        ls -l
        pwd
    - name: Cloudflare Pages GitHub Action
      # You may pin to the exact commit or the version.
      # uses: cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca
      uses: cloudflare/pages-action@v1.5.0
      with:
        # Cloudflare API Token
        apiToken: ${{ secrets.CF_PAGES_TOKEN }}
        # Cloudflare Account ID
        accountId: ${{ vars.CF_ACCOUNT_ID }}
        # The name of the Pages project to upload to
        projectName: shaggy-star
        directory: .
          
